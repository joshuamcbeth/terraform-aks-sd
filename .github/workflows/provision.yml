name: OpenTofu AKS Provision

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: SD Provision
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          version: 1.7.5

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 3.12.0

      - name: Initialize OpenTofu
        working-directory: terraform/
        run: |
          tofu init

      - name: OpenTofu Plan
        working-directory: terraform/
        run: |
          tofu plan -input=false -out=tfplan

      - name: OpenTofu Apply
        working-directory: terraform/
        if: github.ref == 'refs/heads/main'
        run: |
          tofu apply -auto-approve -input=false "tfplan"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: >
            {
              "clientId": "${{ env.ARM_CLIENT_ID }}",
              "clientSecret": "${{ env.ARM_CLIENT_SECRET }}",
              "subscriptionId": "${{ env.ARM_SUBSCRIPTION_ID }}",
              "tenantId": "${{ env.ARM_TENANT_ID }}"
            }
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          creds: >
            {
              "clientId": "${{ env.ARM_CLIENT_ID }}",
              "clientSecret": "${{ env.ARM_CLIENT_SECRET }}",
              "subscriptionId": "${{ env.ARM_SUBSCRIPTION_ID }}",
              "tenantId": "${{ env.ARM_TENANT_ID }}"
            }
          cluster-name: terraform-aks-cluster
          resource-group: terraform-aks-cluster-rg

      # 4. Build Docker image
      - name: Build Docker image, push and deploy
        env:
          ACR_NAME: terraformaksclusteracrg8kf
        run: |
          IMAGE="${{ env.ACR_NAME }}.azurecr.io/sd:${{ github.sha }}"
          az acr login --name ${{ env.ACR_NAME }}
          docker build -t ${IMAGE} ./apps/sd
          docker push ${IMAGE}
          helm upgrade --install sd ./apps/sd/helm --namespace default --set image.repository="${IMAGE%:*}" --set image.tag="${IMAGE##*:}"

      - name: Clean up
        working-directory: terraform/
        run: |
          tofu destroy -auto-approve
